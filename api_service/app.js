const bodyParser = require('body-parser');
const createError = require('http-errors');
const express = require('express');
const path = require('path');
const cookieParser = require('cookie-parser');
const logger = require('morgan');
const graphqlServer = require('graphql-server-express');
const graphqlTools = require('graphql-tools');
const cors = require('cors');
const models = require('./models/index');
const typeDefs = require('./graphql/schema');
const resolvers = require('./graphql/resolvers');

const schema = graphqlTools.makeExecutableSchema({
  typeDefs,
  resolvers
});

const app = express();

// view engine setup
// app.set('views', path.join(__dirname, 'views'));
// app.set('view engine', 'jade');

app.use(cors({
  origin: '*',
  credentials: true
}));

app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended: true}));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/graphql',
  graphqlServer.graphqlExpress(req => ({
    schema: schema,
    context: {
      models,
    }
  }))
);
// app.use('/graphql',
//   graphqlServer.graphiqlExpress({
//     endpointURL: '/graphql'
//   })
// );

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  next(createError(404));
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
