import React from 'react';
import PropTypes from 'prop-types';
import { ROWS_PER_PAGE } from './DataController';
import { getSortBy } from '../util/qs_manipulation';

class DataGrid extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      sortBy: getSortBy(),
    };

    this.handleGridHeaderClick = this.handleGridHeaderClick.bind(this);
  }

  handleGridHeaderClick(e) {
    // Don't do anything if the '#' column is clicked
    if (e.target.abbr === '#') {
      return;
    }

    this.setState({
      sortBy: e.target.abbr,
    });
    this.props.onGridHeaderClick(e.target.abbr);
  }

  render() {
    if (this.props.loading) {
      return <div id="dataTable" className="row" />;
    }

    return (
      <div id="dataTable" className="row">
        <div className="table-responsive row-margin-top-10">
          <table className="table table-hover">
            <thead className="thead-dark">
              <tr onClick={this.handleGridHeaderClick}>
                <th abbr="#" scope="col">#</th>
                <th abbr="date">Date</th>
                <th abbr="ip">IP</th>
                <th abbr="description">Description</th>
                <th abbr="domain">Domain</th>
                <th abbr="asn">ASN</th>
                <th abbr="registrant">Registrant</th>
                <th abbr="revlookup">Reverse Lookup</th>
                <th abbr="country">Country</th>
              </tr>
            </thead>
            <tbody>
              {
                this.props.data.map((data, index) => (
                  <tr
                    className={data.selected ? 'table-danger' : ''}
                    key={data.info.id}
                    onClick={() => {
                      this.props.onSelectLocation(index);
                    }}
                  >
                    <th scope="row">{index + 1 + ((this.props.currentPage - 1) * ROWS_PER_PAGE)}</th>
                    <td className={this.state.sortBy === 'date' ? 'table-active' : ''}>{data.info.date}</td>
                    <td className={this.state.sortBy === 'ip' ? 'table-active' : ''}>{data.info.ip}</td>
                    <td className={this.state.sortBy === 'description' ? 'table-active' : ''}>{data.info.description}</td>
                    <td className={this.state.sortBy === 'domain' ? 'table-active' : ''}>{data.info.domain}</td>
                    <td className={this.state.sortBy === 'asn' ? 'table-active' : ''}>{data.info.asn}</td>
                    <td className={this.state.sortBy === 'registrant' ? 'table-active' : ''}>{data.info.registrant}</td>
                    <td className={this.state.sortBy === 'revlookup' ? 'table-active' : ''}>{data.info.reverse_lookup}</td>
                    <td className={this.state.sortBy === 'country' ? 'table-active' : ''}>{data.info.country}</td>
                  </tr>
                  ))
              }
            </tbody>
          </table>
        </div>
      </div>
    );
  }
}

DataGrid.propTypes = {
  loading: PropTypes.bool.isRequired,
  data: PropTypes.array.isRequired,
  currentPage: PropTypes.number.isRequired,
  onSelectLocation: PropTypes.func.isRequired,
  selectedLocations: PropTypes.array.isRequired,
  onGridHeaderClick: PropTypes.func.isRequired,
};

export default DataGrid;
