import gql from 'graphql-tag';
import React from 'react';
import { withApollo } from 'react-apollo';

class DataGrid extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      filterValue: ''
    };

    this.onTableRowClick = this.onTableRowClick.bind(this);
    this.onFilterValueChange = this.onFilterValueChange.bind(this);
  }

  onTableRowClick(e, location) {
    this.props.showLocation(location);
  }

  onFilterValueChange(e) {
    this.setState({
      filterValue: e.target.value
    })
  }

  render() {
    return (
      <div id="dataTable">
        <div className="row justify-content-left row-margin-top-20">
          <div className="col col-8 col-md-6 no-padding">
            <input id="searchField" className="form-control no-gutters" type="text" placeholder="search"
              onChange={this.onFilterValueChange} />
          </div>
          <div className="col col-4 col-md-2">
            <button type="submit" className="btn btn-primary btn-block"
              onClick={() => this.props.onSearchSubmit(this.state.filterValue)}>search</button>
          </div>
        </div>
        <div className="row">
          <div className="table-responsive row-margin-top-10">
            <table className="table table-hover">
              <thead className="thead-dark">
                <tr>
                  <th scope="col">#</th>
                  <th>Date</th>
                  <th>IP</th>
                  <th>Description</th>
                  <th>ASN</th>
                  <th>Country</th>
                </tr>
              </thead>
              <tbody>
                {
                  this.props.data.map((info, index) => {
                    if (info.description.toLowerCase().indexOf(this.state.filterValue) !== -1 ||
                        info.ip.indexOf(this.state.filterValue) !== -1) {
                      return (
                        <tr key={index} onClick={(e) => {
                          this.props.selectLocation(index)
                        }}>
                          <th scope="row">{index+1}</th>
                          <td>{info.date}</td>
                          <td>{info.ip}</td>
                          <td>{info.description}</td>
                          <td>{info.asn}</td>
                          <td>{info.country}</td>
                        </tr>
                      );
                    }
                  })
                }
              </tbody>
            </table>
          </div>
        </div>
      </div>
    );
  }
}

export default withApollo(DataGrid);
