import gql from 'graphql-tag';
import React from 'react';
import { withApollo } from 'react-apollo';

import DataGrid from './DataGrid';
import MapContainer from './MapContainer';
import { malwareData } from '../../assets/malware_data';

class DataController extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      data: [],
      locations: [],
      selectedLocations: [],
      searchResults: [],
    };

    this.selectLocation = this.selectLocation.bind(this);
    this.onSearchSubmit = this.onSearchSubmit.bind(this);
  }

  componentDidMount() {
    this.props.client.query({
      query: gql`
        query GetData {
          getData(first: 100, offset: 0) {
            date,
            ip,
            description,
            domain,
            asn,
            country,
            registrant,
            reverse_lookup
          }
        }
      `
    })
    .then((response) => {
      this.setState({
        data: response.data.getData
      });

      response.data.getData.map(data => {
        fetch(`https://www.extreme-ip-lookup.com/json/${data.ip}`)
        .then(response => response.json())
        .then(json => {
          this.setState({
            locations: [
              ...this.state.locations,
              {
                lat: json.lat,
                lng: json.lon
              }
            ]
          })
        })
      });
    })
  }

  onSearchSubmit(searchValue) {
    this.props.client.query({
      query: gql`
        query search($searchValue: String!) {
          search(searchValue: $searchValue) {
            date,
            ip,
            description,
            domain,
            asn,
            country,
            registrant,
            reverse_lookup
          }
        }
      `,
      variables: {
        searchValue: searchValue
      }
    })
    .then(response => {
      this.setState({
        data: response.data.search,
        locations: []
      });

      response.data.search.map(data => {
        fetch(`https://www.extreme-ip-lookup.com/json/${data.ip}`)
        .then(response => response.json())
        .then(json => {
          this.setState({
            locations: [
              ...this.state.locations,
              {
                lat: json.lat,
                lng: json.lon
              }
            ]
          })
        })
      });
    });
  }

  selectLocation(index) {
    if (this.state.selectedLocations.filter(loc => loc === this.state.locations[index]).length === 0) {
      this.setState({
        selectedLocations: [
          ...this.state.selectedLocations,
          this.state.locations[index]
        ]
      })
    } else {
      if (this.state.selectedLocations.length === 1) {
        this.setState({
          selectedLocations: []
        })
      } else {
        this.setState({
          selectedLocations: this.state.selectedLocations.map((loc) => {
            if (loc !== this.state.locations[index]) {
              return loc;
            }
          })
        })
      }
    }
  }

  render() {
    return (
      <div>
        <MapContainer locations={this.state.selectedLocations.length > 0 ? this.state.selectedLocations : this.state.locations} />
        <DataGrid data={this.state.data} selectLocation={this.selectLocation} onSearchSubmit={this.onSearchSubmit} />
      </div>
    );
  }
}

export default withApollo(DataController);
