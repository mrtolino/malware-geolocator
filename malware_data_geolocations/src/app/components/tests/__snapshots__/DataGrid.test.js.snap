// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataGrid should match snapshot 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <DataGrid
    currentPage={1}
    data={Array []}
    loading={false}
    onGridHeaderClick={[Function]}
    onSelectLocation={[Function]}
    selectedLocations={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": DataGrid {
      "_reactInternalFiber": FiberNode {
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "currentPage": 1,
              "data": Array [],
              "loading": false,
              "onGridHeaderClick": [Function],
              "onSelectLocation": [Function],
              "selectedLocations": Array [],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "currentPage": 1,
              "data": Array [],
              "loading": false,
              "onGridHeaderClick": [Function],
              "onSelectLocation": [Function],
              "selectedLocations": Array [],
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "currentPage": 1,
              "data": Array [],
              "loading": false,
              "onGridHeaderClick": [Function],
              "onSelectLocation": [Function],
              "selectedLocations": Array [],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row"
                    id="dataTable"
                  >
                    <div
                      class="table-responsive row-margin-top-10"
                    >
                      <table
                        class="table table-hover"
                      >
                        <thead
                          class="thead-dark"
                        >
                          <tr>
                            <th
                              abbr="#"
                              scope="col"
                            >
                              #
                            </th>
                            <th
                              abbr="date"
                            >
                              Date
                            </th>
                            <th
                              abbr="ip"
                            >
                              IP
                            </th>
                            <th
                              abbr="description"
                            >
                              Description
                            </th>
                            <th
                              abbr="domain"
                            >
                              Domain
                            </th>
                            <th
                              abbr="asn"
                            >
                              ASN
                            </th>
                            <th
                              abbr="registrant"
                            >
                              Registrant
                            </th>
                            <th
                              abbr="revlookup"
                            >
                              Reverse Lookup
                            </th>
                            <th
                              abbr="country"
                            >
                              Country
                            </th>
                          </tr>
                        </thead>
                        <tbody />
                      </table>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "currentPage": 1,
                          "data": Array [],
                          "loading": false,
                          "onGridHeaderClick": [Function],
                          "onSelectLocation": [Function],
                          "selectedLocations": Array [],
                        }
                      }
                    />,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "currentPage": 1,
                          "data": Array [],
                          "loading": false,
                          "onGridHeaderClick": [Function],
                          "onSelectLocation": [Function],
                          "selectedLocations": Array [],
                        }
                      }
                    />,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "currentPage": 1,
                    "data": Array [],
                    "loading": false,
                    "onGridHeaderClick": [Function],
                    "onSelectLocation": [Function],
                    "selectedLocations": Array [],
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="row"
                  id="dataTable"
                >
                  <div
                    class="table-responsive row-margin-top-10"
                  >
                    <table
                      class="table table-hover"
                    >
                      <thead
                        class="thead-dark"
                      >
                        <tr>
                          <th
                            abbr="#"
                            scope="col"
                          >
                            #
                          </th>
                          <th
                            abbr="date"
                          >
                            Date
                          </th>
                          <th
                            abbr="ip"
                          >
                            IP
                          </th>
                          <th
                            abbr="description"
                          >
                            Description
                          </th>
                          <th
                            abbr="domain"
                          >
                            Domain
                          </th>
                          <th
                            abbr="asn"
                          >
                            ASN
                          </th>
                          <th
                            abbr="registrant"
                          >
                            Registrant
                          </th>
                          <th
                            abbr="revlookup"
                          >
                            Reverse Lookup
                          </th>
                          <th
                            abbr="country"
                          >
                            Country
                          </th>
                        </tr>
                      </thead>
                      <tbody />
                    </table>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "currentPage": 1,
                      "data": Array [],
                      "loading": false,
                      "onGridHeaderClick": [Function],
                      "onSelectLocation": [Function],
                      "selectedLocations": Array [],
                    }
                  }
                />,
              },
              "callbackList": null,
              "capturedValues": null,
              "expirationTime": 0,
              "first": null,
              "hasForceUpdate": false,
              "isInitialized": true,
              "isProcessing": false,
              "last": null,
            },
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "abbr": "#",
                      "children": "#",
                      "scope": "col",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "abbr": "#",
                      "children": "#",
                      "scope": "col",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "abbr": "date",
                        "children": "Date",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "abbr": "date",
                        "children": "Date",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "abbr": "ip",
                          "children": "IP",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "abbr": "ip",
                          "children": "IP",
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 15,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "abbr": "description",
                            "children": "Description",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "abbr": "description",
                            "children": "Description",
                          },
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 16,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 4,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "abbr": "domain",
                              "children": "Domain",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "abbr": "domain",
                              "children": "Domain",
                            },
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 5,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "abbr": "asn",
                                "children": "ASN",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "abbr": "asn",
                                "children": "ASN",
                              },
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 18,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 6,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "abbr": "registrant",
                                  "children": "Registrant",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "abbr": "registrant",
                                  "children": "Registrant",
                                },
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 19,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 7,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "abbr": "revlookup",
                                    "children": "Reverse Lookup",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "abbr": "revlookup",
                                    "children": "Reverse Lookup",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": FiberNode {
                                    "_debugID": 20,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 8,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "abbr": "country",
                                      "children": "Country",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "abbr": "country",
                                      "children": "Country",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": <th
                                      abbr="country"
                                    >
                                      Country
                                    </th>,
                                    "tag": 5,
                                    "type": "th",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <th
                                    abbr="revlookup"
                                  >
                                    Reverse Lookup
                                  </th>,
                                  "tag": 5,
                                  "type": "th",
                                  "updateQueue": null,
                                },
                                "stateNode": <th
                                  abbr="registrant"
                                >
                                  Registrant
                                </th>,
                                "tag": 5,
                                "type": "th",
                                "updateQueue": null,
                              },
                              "stateNode": <th
                                abbr="asn"
                              >
                                ASN
                              </th>,
                              "tag": 5,
                              "type": "th",
                              "updateQueue": null,
                            },
                            "stateNode": <th
                              abbr="domain"
                            >
                              Domain
                            </th>,
                            "tag": 5,
                            "type": "th",
                            "updateQueue": null,
                          },
                          "stateNode": <th
                            abbr="description"
                          >
                            Description
                          </th>,
                          "tag": 5,
                          "type": "th",
                          "updateQueue": null,
                        },
                        "stateNode": <th
                          abbr="ip"
                        >
                          IP
                        </th>,
                        "tag": 5,
                        "type": "th",
                        "updateQueue": null,
                      },
                      "stateNode": <th
                        abbr="date"
                      >
                        Date
                      </th>,
                      "tag": 5,
                      "type": "th",
                      "updateQueue": null,
                    },
                    "stateNode": <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>,
                    "tag": 5,
                    "type": "th",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>,
                      <th
                        abbr="date"
                      >
                        Date
                      </th>,
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>,
                      <th
                        abbr="description"
                      >
                        Description
                      </th>,
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>,
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>,
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>,
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>,
                      <th
                        abbr="country"
                      >
                        Country
                      </th>,
                    ],
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>,
                      <th
                        abbr="date"
                      >
                        Date
                      </th>,
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>,
                      <th
                        abbr="description"
                      >
                        Description
                      </th>,
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>,
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>,
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>,
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>,
                      <th
                        abbr="country"
                      >
                        Country
                      </th>,
                    ],
                    "onClick": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <tr>
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>,
                  "tag": 5,
                  "type": "tr",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <tr
                    onClick={[Function]}
                  >
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>,
                  "className": "thead-dark",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <tr
                    onClick={[Function]}
                  >
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>,
                  "className": "thead-dark",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [],
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <tbody />,
                  "tag": 5,
                  "type": "tbody",
                  "updateQueue": null,
                },
                "stateNode": <thead
                  class="thead-dark"
                >
                  <tr>
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>,
                "tag": 5,
                "type": "thead",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <thead
                    className="thead-dark"
                  >
                    <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>,
                  <tbody />,
                ],
                "className": "table table-hover",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <thead
                    className="thead-dark"
                  >
                    <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>,
                  <tbody />,
                ],
                "className": "table table-hover",
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <table
                class="table table-hover"
              >
                <thead
                  class="thead-dark"
                >
                  <tr>
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>,
              "tag": 5,
              "type": "table",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <table
                className="table table-hover"
              >
                <thead
                  className="thead-dark"
                >
                  <tr
                    onClick={[Function]}
                  >
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>,
              "className": "table-responsive row-margin-top-10",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <table
                className="table table-hover"
              >
                <thead
                  className="thead-dark"
                >
                  <tr
                    onClick={[Function]}
                  >
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>,
              "className": "table-responsive row-margin-top-10",
            },
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="table-responsive row-margin-top-10"
            >
              <table
                class="table table-hover"
              >
                <thead
                  class="thead-dark"
                >
                  <tr>
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <div
              className="table-responsive row-margin-top-10"
            >
              <table
                className="table table-hover"
              >
                <thead
                  className="thead-dark"
                >
                  <tr
                    onClick={[Function]}
                  >
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>
            </div>,
            "className": "row",
            "id": "dataTable",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <div
              className="table-responsive row-margin-top-10"
            >
              <table
                className="table table-hover"
              >
                <thead
                  className="thead-dark"
                >
                  <tr
                    onClick={[Function]}
                  >
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>
            </div>,
            "className": "row",
            "id": "dataTable",
          },
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="row"
            id="dataTable"
          >
            <div
              class="table-responsive row-margin-top-10"
            >
              <table
                class="table table-hover"
              >
                <thead
                  class="thead-dark"
                >
                  <tr>
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>
            </div>
          </div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "currentPage": 1,
          "data": Array [],
          "loading": false,
          "onGridHeaderClick": [Function],
          "onSelectLocation": [Function],
          "selectedLocations": Array [],
        },
        "memoizedState": Object {
          "sortBy": undefined,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "currentPage": 1,
          "data": Array [],
          "loading": false,
          "onGridHeaderClick": [Function],
          "onSelectLocation": [Function],
          "selectedLocations": Array [],
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "currentPage": 1,
              "data": Array [],
              "loading": false,
              "onGridHeaderClick": [Function],
              "onSelectLocation": [Function],
              "selectedLocations": Array [],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "currentPage": 1,
              "data": Array [],
              "loading": false,
              "onGridHeaderClick": [Function],
              "onSelectLocation": [Function],
              "selectedLocations": Array [],
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "currentPage": 1,
              "data": Array [],
              "loading": false,
              "onGridHeaderClick": [Function],
              "onSelectLocation": [Function],
              "selectedLocations": Array [],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row"
                    id="dataTable"
                  >
                    <div
                      class="table-responsive row-margin-top-10"
                    >
                      <table
                        class="table table-hover"
                      >
                        <thead
                          class="thead-dark"
                        >
                          <tr>
                            <th
                              abbr="#"
                              scope="col"
                            >
                              #
                            </th>
                            <th
                              abbr="date"
                            >
                              Date
                            </th>
                            <th
                              abbr="ip"
                            >
                              IP
                            </th>
                            <th
                              abbr="description"
                            >
                              Description
                            </th>
                            <th
                              abbr="domain"
                            >
                              Domain
                            </th>
                            <th
                              abbr="asn"
                            >
                              ASN
                            </th>
                            <th
                              abbr="registrant"
                            >
                              Registrant
                            </th>
                            <th
                              abbr="revlookup"
                            >
                              Reverse Lookup
                            </th>
                            <th
                              abbr="country"
                            >
                              Country
                            </th>
                          </tr>
                        </thead>
                        <tbody />
                      </table>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "currentPage": 1,
                          "data": Array [],
                          "loading": false,
                          "onGridHeaderClick": [Function],
                          "onSelectLocation": [Function],
                          "selectedLocations": Array [],
                        }
                      }
                    />,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "currentPage": 1,
                          "data": Array [],
                          "loading": false,
                          "onGridHeaderClick": [Function],
                          "onSelectLocation": [Function],
                          "selectedLocations": Array [],
                        }
                      }
                    />,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "currentPage": 1,
                    "data": Array [],
                    "loading": false,
                    "onGridHeaderClick": [Function],
                    "onSelectLocation": [Function],
                    "selectedLocations": Array [],
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="row"
                  id="dataTable"
                >
                  <div
                    class="table-responsive row-margin-top-10"
                  >
                    <table
                      class="table table-hover"
                    >
                      <thead
                        class="thead-dark"
                      >
                        <tr>
                          <th
                            abbr="#"
                            scope="col"
                          >
                            #
                          </th>
                          <th
                            abbr="date"
                          >
                            Date
                          </th>
                          <th
                            abbr="ip"
                          >
                            IP
                          </th>
                          <th
                            abbr="description"
                          >
                            Description
                          </th>
                          <th
                            abbr="domain"
                          >
                            Domain
                          </th>
                          <th
                            abbr="asn"
                          >
                            ASN
                          </th>
                          <th
                            abbr="registrant"
                          >
                            Registrant
                          </th>
                          <th
                            abbr="revlookup"
                          >
                            Reverse Lookup
                          </th>
                          <th
                            abbr="country"
                          >
                            Country
                          </th>
                        </tr>
                      </thead>
                      <tbody />
                    </table>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "currentPage": 1,
                      "data": Array [],
                      "loading": false,
                      "onGridHeaderClick": [Function],
                      "onSelectLocation": [Function],
                      "selectedLocations": Array [],
                    }
                  }
                />,
              },
              "callbackList": null,
              "capturedValues": null,
              "expirationTime": 0,
              "first": null,
              "hasForceUpdate": false,
              "isInitialized": true,
              "isProcessing": false,
              "last": null,
            },
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "handleGridHeaderClick": [Function],
      "props": Object {
        "currentPage": 1,
        "data": Array [],
        "loading": false,
        "onGridHeaderClick": [Function],
        "onSelectLocation": [Function],
        "selectedLocations": Array [],
      },
      "refs": Object {},
      "state": Object {
        "sortBy": undefined,
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "currentPage": 1,
      "data": Array [],
      "loading": false,
      "onGridHeaderClick": [Function],
      "onSelectLocation": [Function],
      "selectedLocations": Array [],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="row"
        id="dataTable"
      >
        <div
          class="table-responsive row-margin-top-10"
        >
          <table
            class="table table-hover"
          >
            <thead
              class="thead-dark"
            >
              <tr>
                <th
                  abbr="#"
                  scope="col"
                >
                  #
                </th>
                <th
                  abbr="date"
                >
                  Date
                </th>
                <th
                  abbr="ip"
                >
                  IP
                </th>
                <th
                  abbr="description"
                >
                  Description
                </th>
                <th
                  abbr="domain"
                >
                  Domain
                </th>
                <th
                  abbr="asn"
                >
                  ASN
                </th>
                <th
                  abbr="registrant"
                >
                  Registrant
                </th>
                <th
                  abbr="revlookup"
                >
                  Reverse Lookup
                </th>
                <th
                  abbr="country"
                >
                  Country
                </th>
              </tr>
            </thead>
            <tbody />
          </table>
        </div>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="table-responsive row-margin-top-10"
        >
          <table
            className="table table-hover"
          >
            <thead
              className="thead-dark"
            >
              <tr
                onClick={[Function]}
              >
                <th
                  abbr="#"
                  scope="col"
                >
                  #
                </th>
                <th
                  abbr="date"
                >
                  Date
                </th>
                <th
                  abbr="ip"
                >
                  IP
                </th>
                <th
                  abbr="description"
                >
                  Description
                </th>
                <th
                  abbr="domain"
                >
                  Domain
                </th>
                <th
                  abbr="asn"
                >
                  ASN
                </th>
                <th
                  abbr="registrant"
                >
                  Registrant
                </th>
                <th
                  abbr="revlookup"
                >
                  Reverse Lookup
                </th>
                <th
                  abbr="country"
                >
                  Country
                </th>
              </tr>
            </thead>
            <tbody />
          </table>
        </div>,
        "className": "row",
        "id": "dataTable",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div
            class="table-responsive row-margin-top-10"
          >
            <table
              class="table table-hover"
            >
              <thead
                class="thead-dark"
              >
                <tr>
                  <th
                    abbr="#"
                    scope="col"
                  >
                    #
                  </th>
                  <th
                    abbr="date"
                  >
                    Date
                  </th>
                  <th
                    abbr="ip"
                  >
                    IP
                  </th>
                  <th
                    abbr="description"
                  >
                    Description
                  </th>
                  <th
                    abbr="domain"
                  >
                    Domain
                  </th>
                  <th
                    abbr="asn"
                  >
                    ASN
                  </th>
                  <th
                    abbr="registrant"
                  >
                    Registrant
                  </th>
                  <th
                    abbr="revlookup"
                  >
                    Reverse Lookup
                  </th>
                  <th
                    abbr="country"
                  >
                    Country
                  </th>
                </tr>
              </thead>
              <tbody />
            </table>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <table
              className="table table-hover"
            >
              <thead
                className="thead-dark"
              >
                <tr
                  onClick={[Function]}
                >
                  <th
                    abbr="#"
                    scope="col"
                  >
                    #
                  </th>
                  <th
                    abbr="date"
                  >
                    Date
                  </th>
                  <th
                    abbr="ip"
                  >
                    IP
                  </th>
                  <th
                    abbr="description"
                  >
                    Description
                  </th>
                  <th
                    abbr="domain"
                  >
                    Domain
                  </th>
                  <th
                    abbr="asn"
                  >
                    ASN
                  </th>
                  <th
                    abbr="registrant"
                  >
                    Registrant
                  </th>
                  <th
                    abbr="revlookup"
                  >
                    Reverse Lookup
                  </th>
                  <th
                    abbr="country"
                  >
                    Country
                  </th>
                </tr>
              </thead>
              <tbody />
            </table>,
            "className": "table-responsive row-margin-top-10",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <table
                class="table table-hover"
              >
                <thead
                  class="thead-dark"
                >
                  <tr>
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <thead
                    className="thead-dark"
                  >
                    <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>,
                  <tbody />,
                ],
                "className": "table table-hover",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <thead
                    class="thead-dark"
                  >
                    <tr>
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>,
                    "className": "thead-dark",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <tr>
                        <th
                          abbr="#"
                          scope="col"
                        >
                          #
                        </th>
                        <th
                          abbr="date"
                        >
                          Date
                        </th>
                        <th
                          abbr="ip"
                        >
                          IP
                        </th>
                        <th
                          abbr="description"
                        >
                          Description
                        </th>
                        <th
                          abbr="domain"
                        >
                          Domain
                        </th>
                        <th
                          abbr="asn"
                        >
                          ASN
                        </th>
                        <th
                          abbr="registrant"
                        >
                          Registrant
                        </th>
                        <th
                          abbr="revlookup"
                        >
                          Reverse Lookup
                        </th>
                        <th
                          abbr="country"
                        >
                          Country
                        </th>
                      </tr>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <th
                            abbr="#"
                            scope="col"
                          >
                            #
                          </th>,
                          <th
                            abbr="date"
                          >
                            Date
                          </th>,
                          <th
                            abbr="ip"
                          >
                            IP
                          </th>,
                          <th
                            abbr="description"
                          >
                            Description
                          </th>,
                          <th
                            abbr="domain"
                          >
                            Domain
                          </th>,
                          <th
                            abbr="asn"
                          >
                            ASN
                          </th>,
                          <th
                            abbr="registrant"
                          >
                            Registrant
                          </th>,
                          <th
                            abbr="revlookup"
                          >
                            Reverse Lookup
                          </th>,
                          <th
                            abbr="country"
                          >
                            Country
                          </th>,
                        ],
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <th
                            abbr="#"
                            scope="col"
                          >
                            #
                          </th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "abbr": "#",
                            "children": "#",
                            "scope": "col",
                          },
                          "ref": null,
                          "rendered": Array [
                            "#",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            abbr="date"
                          >
                            Date
                          </th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "abbr": "date",
                            "children": "Date",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Date",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            abbr="ip"
                          >
                            IP
                          </th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "abbr": "ip",
                            "children": "IP",
                          },
                          "ref": null,
                          "rendered": Array [
                            "IP",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            abbr="description"
                          >
                            Description
                          </th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "abbr": "description",
                            "children": "Description",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Description",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            abbr="domain"
                          >
                            Domain
                          </th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "abbr": "domain",
                            "children": "Domain",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Domain",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            abbr="asn"
                          >
                            ASN
                          </th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "abbr": "asn",
                            "children": "ASN",
                          },
                          "ref": null,
                          "rendered": Array [
                            "ASN",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            abbr="registrant"
                          >
                            Registrant
                          </th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "abbr": "registrant",
                            "children": "Registrant",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Registrant",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            abbr="revlookup"
                          >
                            Reverse Lookup
                          </th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "abbr": "revlookup",
                            "children": "Reverse Lookup",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Reverse Lookup",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            abbr="country"
                          >
                            Country
                          </th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "abbr": "country",
                            "children": "Country",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Country",
                          ],
                          "type": "th",
                        },
                      ],
                      "type": "tr",
                    },
                  ],
                  "type": "thead",
                },
                Object {
                  "instance": <tbody />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                  },
                  "ref": null,
                  "rendered": Array [
                    Array [],
                  ],
                  "type": "tbody",
                },
              ],
              "type": "table",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": DataGrid {
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="row"
                      id="dataTable"
                    >
                      <div
                        class="table-responsive row-margin-top-10"
                      >
                        <table
                          class="table table-hover"
                        >
                          <thead
                            class="thead-dark"
                          >
                            <tr>
                              <th
                                abbr="#"
                                scope="col"
                              >
                                #
                              </th>
                              <th
                                abbr="date"
                              >
                                Date
                              </th>
                              <th
                                abbr="ip"
                              >
                                IP
                              </th>
                              <th
                                abbr="description"
                              >
                                Description
                              </th>
                              <th
                                abbr="domain"
                              >
                                Domain
                              </th>
                              <th
                                abbr="asn"
                              >
                                ASN
                              </th>
                              <th
                                abbr="registrant"
                              >
                                Registrant
                              </th>
                              <th
                                abbr="revlookup"
                              >
                                Reverse Lookup
                              </th>
                              <th
                                abbr="country"
                              >
                                Country
                              </th>
                            </tr>
                          </thead>
                          <tbody />
                        </table>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "currentPage": 1,
                            "data": Array [],
                            "loading": false,
                            "onGridHeaderClick": [Function],
                            "onSelectLocation": [Function],
                            "selectedLocations": Array [],
                          }
                        }
                      />,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "currentPage": 1,
                            "data": Array [],
                            "loading": false,
                            "onGridHeaderClick": [Function],
                            "onSelectLocation": [Function],
                            "selectedLocations": Array [],
                          }
                        }
                      />,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "currentPage": 1,
                      "data": Array [],
                      "loading": false,
                      "onGridHeaderClick": [Function],
                      "onSelectLocation": [Function],
                      "selectedLocations": Array [],
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row"
                    id="dataTable"
                  >
                    <div
                      class="table-responsive row-margin-top-10"
                    >
                      <table
                        class="table table-hover"
                      >
                        <thead
                          class="thead-dark"
                        >
                          <tr>
                            <th
                              abbr="#"
                              scope="col"
                            >
                              #
                            </th>
                            <th
                              abbr="date"
                            >
                              Date
                            </th>
                            <th
                              abbr="ip"
                            >
                              IP
                            </th>
                            <th
                              abbr="description"
                            >
                              Description
                            </th>
                            <th
                              abbr="domain"
                            >
                              Domain
                            </th>
                            <th
                              abbr="asn"
                            >
                              ASN
                            </th>
                            <th
                              abbr="registrant"
                            >
                              Registrant
                            </th>
                            <th
                              abbr="revlookup"
                            >
                              Reverse Lookup
                            </th>
                            <th
                              abbr="country"
                            >
                              Country
                            </th>
                          </tr>
                        </thead>
                        <tbody />
                      </table>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "currentPage": 1,
                        "data": Array [],
                        "loading": false,
                        "onGridHeaderClick": [Function],
                        "onSelectLocation": [Function],
                        "selectedLocations": Array [],
                      }
                    }
                  />,
                },
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 0,
                "first": null,
                "hasForceUpdate": false,
                "isInitialized": true,
                "isProcessing": false,
                "last": null,
              },
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "currentPage": 1,
                  "data": Array [],
                  "loading": false,
                  "onGridHeaderClick": [Function],
                  "onSelectLocation": [Function],
                  "selectedLocations": Array [],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "currentPage": 1,
                  "data": Array [],
                  "loading": false,
                  "onGridHeaderClick": [Function],
                  "onSelectLocation": [Function],
                  "selectedLocations": Array [],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "abbr": "#",
                        "children": "#",
                        "scope": "col",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "abbr": "#",
                        "children": "#",
                        "scope": "col",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "abbr": "date",
                          "children": "Date",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "abbr": "date",
                          "children": "Date",
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "abbr": "ip",
                            "children": "IP",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "abbr": "ip",
                            "children": "IP",
                          },
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 3,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "abbr": "description",
                              "children": "Description",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "abbr": "description",
                              "children": "Description",
                            },
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 4,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "abbr": "domain",
                                "children": "Domain",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "abbr": "domain",
                                "children": "Domain",
                              },
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 17,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 5,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "abbr": "asn",
                                  "children": "ASN",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "abbr": "asn",
                                  "children": "ASN",
                                },
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 18,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 6,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "abbr": "registrant",
                                    "children": "Registrant",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "abbr": "registrant",
                                    "children": "Registrant",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": FiberNode {
                                    "_debugID": 19,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 7,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "abbr": "revlookup",
                                      "children": "Reverse Lookup",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "abbr": "revlookup",
                                      "children": "Reverse Lookup",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": FiberNode {
                                      "_debugID": 20,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "alternate": null,
                                      "child": null,
                                      "effectTag": 0,
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 8,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "abbr": "country",
                                        "children": "Country",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "abbr": "country",
                                        "children": "Country",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "sibling": null,
                                      "stateNode": <th
                                        abbr="country"
                                      >
                                        Country
                                      </th>,
                                      "tag": 5,
                                      "type": "th",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <th
                                      abbr="revlookup"
                                    >
                                      Reverse Lookup
                                    </th>,
                                    "tag": 5,
                                    "type": "th",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <th
                                    abbr="registrant"
                                  >
                                    Registrant
                                  </th>,
                                  "tag": 5,
                                  "type": "th",
                                  "updateQueue": null,
                                },
                                "stateNode": <th
                                  abbr="asn"
                                >
                                  ASN
                                </th>,
                                "tag": 5,
                                "type": "th",
                                "updateQueue": null,
                              },
                              "stateNode": <th
                                abbr="domain"
                              >
                                Domain
                              </th>,
                              "tag": 5,
                              "type": "th",
                              "updateQueue": null,
                            },
                            "stateNode": <th
                              abbr="description"
                            >
                              Description
                            </th>,
                            "tag": 5,
                            "type": "th",
                            "updateQueue": null,
                          },
                          "stateNode": <th
                            abbr="ip"
                          >
                            IP
                          </th>,
                          "tag": 5,
                          "type": "th",
                          "updateQueue": null,
                        },
                        "stateNode": <th
                          abbr="date"
                        >
                          Date
                        </th>,
                        "tag": 5,
                        "type": "th",
                        "updateQueue": null,
                      },
                      "stateNode": <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>,
                      "tag": 5,
                      "type": "th",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <th
                          abbr="#"
                          scope="col"
                        >
                          #
                        </th>,
                        <th
                          abbr="date"
                        >
                          Date
                        </th>,
                        <th
                          abbr="ip"
                        >
                          IP
                        </th>,
                        <th
                          abbr="description"
                        >
                          Description
                        </th>,
                        <th
                          abbr="domain"
                        >
                          Domain
                        </th>,
                        <th
                          abbr="asn"
                        >
                          ASN
                        </th>,
                        <th
                          abbr="registrant"
                        >
                          Registrant
                        </th>,
                        <th
                          abbr="revlookup"
                        >
                          Reverse Lookup
                        </th>,
                        <th
                          abbr="country"
                        >
                          Country
                        </th>,
                      ],
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <th
                          abbr="#"
                          scope="col"
                        >
                          #
                        </th>,
                        <th
                          abbr="date"
                        >
                          Date
                        </th>,
                        <th
                          abbr="ip"
                        >
                          IP
                        </th>,
                        <th
                          abbr="description"
                        >
                          Description
                        </th>,
                        <th
                          abbr="domain"
                        >
                          Domain
                        </th>,
                        <th
                          abbr="asn"
                        >
                          ASN
                        </th>,
                        <th
                          abbr="registrant"
                        >
                          Registrant
                        </th>,
                        <th
                          abbr="revlookup"
                        >
                          Reverse Lookup
                        </th>,
                        <th
                          abbr="country"
                        >
                          Country
                        </th>,
                      ],
                      "onClick": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <tr>
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>,
                    "tag": 5,
                    "type": "tr",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>,
                    "className": "thead-dark",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>,
                    "className": "thead-dark",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [],
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <tbody />,
                    "tag": 5,
                    "type": "tbody",
                    "updateQueue": null,
                  },
                  "stateNode": <thead
                    class="thead-dark"
                  >
                    <tr>
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>,
                  "tag": 5,
                  "type": "thead",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <thead
                      className="thead-dark"
                    >
                      <tr
                        onClick={[Function]}
                      >
                        <th
                          abbr="#"
                          scope="col"
                        >
                          #
                        </th>
                        <th
                          abbr="date"
                        >
                          Date
                        </th>
                        <th
                          abbr="ip"
                        >
                          IP
                        </th>
                        <th
                          abbr="description"
                        >
                          Description
                        </th>
                        <th
                          abbr="domain"
                        >
                          Domain
                        </th>
                        <th
                          abbr="asn"
                        >
                          ASN
                        </th>
                        <th
                          abbr="registrant"
                        >
                          Registrant
                        </th>
                        <th
                          abbr="revlookup"
                        >
                          Reverse Lookup
                        </th>
                        <th
                          abbr="country"
                        >
                          Country
                        </th>
                      </tr>
                    </thead>,
                    <tbody />,
                  ],
                  "className": "table table-hover",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <thead
                      className="thead-dark"
                    >
                      <tr
                        onClick={[Function]}
                      >
                        <th
                          abbr="#"
                          scope="col"
                        >
                          #
                        </th>
                        <th
                          abbr="date"
                        >
                          Date
                        </th>
                        <th
                          abbr="ip"
                        >
                          IP
                        </th>
                        <th
                          abbr="description"
                        >
                          Description
                        </th>
                        <th
                          abbr="domain"
                        >
                          Domain
                        </th>
                        <th
                          abbr="asn"
                        >
                          ASN
                        </th>
                        <th
                          abbr="registrant"
                        >
                          Registrant
                        </th>
                        <th
                          abbr="revlookup"
                        >
                          Reverse Lookup
                        </th>
                        <th
                          abbr="country"
                        >
                          Country
                        </th>
                      </tr>
                    </thead>,
                    <tbody />,
                  ],
                  "className": "table table-hover",
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <table
                  class="table table-hover"
                >
                  <thead
                    class="thead-dark"
                  >
                    <tr>
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>
                  <tbody />
                </table>,
                "tag": 5,
                "type": "table",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <table
                  className="table table-hover"
                >
                  <thead
                    className="thead-dark"
                  >
                    <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>
                  <tbody />
                </table>,
                "className": "table-responsive row-margin-top-10",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <table
                  className="table table-hover"
                >
                  <thead
                    className="thead-dark"
                  >
                    <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>
                  <tbody />
                </table>,
                "className": "table-responsive row-margin-top-10",
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="table-responsive row-margin-top-10"
              >
                <table
                  class="table table-hover"
                >
                  <thead
                    class="thead-dark"
                  >
                    <tr>
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>
                  <tbody />
                </table>
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <div
                className="table-responsive row-margin-top-10"
              >
                <table
                  className="table table-hover"
                >
                  <thead
                    className="thead-dark"
                  >
                    <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>
                  <tbody />
                </table>
              </div>,
              "className": "row",
              "id": "dataTable",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <div
                className="table-responsive row-margin-top-10"
              >
                <table
                  className="table table-hover"
                >
                  <thead
                    className="thead-dark"
                  >
                    <tr
                      onClick={[Function]}
                    >
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>
                  <tbody />
                </table>
              </div>,
              "className": "row",
              "id": "dataTable",
            },
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="row"
              id="dataTable"
            >
              <div
                class="table-responsive row-margin-top-10"
              >
                <table
                  class="table table-hover"
                >
                  <thead
                    class="thead-dark"
                  >
                    <tr>
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>
                  <tbody />
                </table>
              </div>
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "currentPage": 1,
            "data": Array [],
            "loading": false,
            "onGridHeaderClick": [Function],
            "onSelectLocation": [Function],
            "selectedLocations": Array [],
          },
          "memoizedState": Object {
            "sortBy": undefined,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "currentPage": 1,
            "data": Array [],
            "loading": false,
            "onGridHeaderClick": [Function],
            "onSelectLocation": [Function],
            "selectedLocations": Array [],
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "currentPage": 1,
                "data": Array [],
                "loading": false,
                "onGridHeaderClick": [Function],
                "onSelectLocation": [Function],
                "selectedLocations": Array [],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="row"
                      id="dataTable"
                    >
                      <div
                        class="table-responsive row-margin-top-10"
                      >
                        <table
                          class="table table-hover"
                        >
                          <thead
                            class="thead-dark"
                          >
                            <tr>
                              <th
                                abbr="#"
                                scope="col"
                              >
                                #
                              </th>
                              <th
                                abbr="date"
                              >
                                Date
                              </th>
                              <th
                                abbr="ip"
                              >
                                IP
                              </th>
                              <th
                                abbr="description"
                              >
                                Description
                              </th>
                              <th
                                abbr="domain"
                              >
                                Domain
                              </th>
                              <th
                                abbr="asn"
                              >
                                ASN
                              </th>
                              <th
                                abbr="registrant"
                              >
                                Registrant
                              </th>
                              <th
                                abbr="revlookup"
                              >
                                Reverse Lookup
                              </th>
                              <th
                                abbr="country"
                              >
                                Country
                              </th>
                            </tr>
                          </thead>
                          <tbody />
                        </table>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "currentPage": 1,
                            "data": Array [],
                            "loading": false,
                            "onGridHeaderClick": [Function],
                            "onSelectLocation": [Function],
                            "selectedLocations": Array [],
                          }
                        }
                      />,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "currentPage": 1,
                            "data": Array [],
                            "loading": false,
                            "onGridHeaderClick": [Function],
                            "onSelectLocation": [Function],
                            "selectedLocations": Array [],
                          }
                        }
                      />,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "currentPage": 1,
                      "data": Array [],
                      "loading": false,
                      "onGridHeaderClick": [Function],
                      "onSelectLocation": [Function],
                      "selectedLocations": Array [],
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row"
                    id="dataTable"
                  >
                    <div
                      class="table-responsive row-margin-top-10"
                    >
                      <table
                        class="table table-hover"
                      >
                        <thead
                          class="thead-dark"
                        >
                          <tr>
                            <th
                              abbr="#"
                              scope="col"
                            >
                              #
                            </th>
                            <th
                              abbr="date"
                            >
                              Date
                            </th>
                            <th
                              abbr="ip"
                            >
                              IP
                            </th>
                            <th
                              abbr="description"
                            >
                              Description
                            </th>
                            <th
                              abbr="domain"
                            >
                              Domain
                            </th>
                            <th
                              abbr="asn"
                            >
                              ASN
                            </th>
                            <th
                              abbr="registrant"
                            >
                              Registrant
                            </th>
                            <th
                              abbr="revlookup"
                            >
                              Reverse Lookup
                            </th>
                            <th
                              abbr="country"
                            >
                              Country
                            </th>
                          </tr>
                        </thead>
                        <tbody />
                      </table>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "currentPage": 1,
                        "data": Array [],
                        "loading": false,
                        "onGridHeaderClick": [Function],
                        "onSelectLocation": [Function],
                        "selectedLocations": Array [],
                      }
                    }
                  />,
                },
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 0,
                "first": null,
                "hasForceUpdate": false,
                "isInitialized": true,
                "isProcessing": false,
                "last": null,
              },
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "currentPage": 1,
                  "data": Array [],
                  "loading": false,
                  "onGridHeaderClick": [Function],
                  "onSelectLocation": [Function],
                  "selectedLocations": Array [],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "currentPage": 1,
                  "data": Array [],
                  "loading": false,
                  "onGridHeaderClick": [Function],
                  "onSelectLocation": [Function],
                  "selectedLocations": Array [],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "handleGridHeaderClick": [Function],
        "props": Object {
          "currentPage": 1,
          "data": Array [],
          "loading": false,
          "onGridHeaderClick": [Function],
          "onSelectLocation": [Function],
          "selectedLocations": Array [],
        },
        "refs": Object {},
        "state": Object {
          "sortBy": undefined,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "currentPage": 1,
        "data": Array [],
        "loading": false,
        "onGridHeaderClick": [Function],
        "onSelectLocation": [Function],
        "selectedLocations": Array [],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="row"
          id="dataTable"
        >
          <div
            class="table-responsive row-margin-top-10"
          >
            <table
              class="table table-hover"
            >
              <thead
                class="thead-dark"
              >
                <tr>
                  <th
                    abbr="#"
                    scope="col"
                  >
                    #
                  </th>
                  <th
                    abbr="date"
                  >
                    Date
                  </th>
                  <th
                    abbr="ip"
                  >
                    IP
                  </th>
                  <th
                    abbr="description"
                  >
                    Description
                  </th>
                  <th
                    abbr="domain"
                  >
                    Domain
                  </th>
                  <th
                    abbr="asn"
                  >
                    ASN
                  </th>
                  <th
                    abbr="registrant"
                  >
                    Registrant
                  </th>
                  <th
                    abbr="revlookup"
                  >
                    Reverse Lookup
                  </th>
                  <th
                    abbr="country"
                  >
                    Country
                  </th>
                </tr>
              </thead>
              <tbody />
            </table>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="table-responsive row-margin-top-10"
          >
            <table
              className="table table-hover"
            >
              <thead
                className="thead-dark"
              >
                <tr
                  onClick={[Function]}
                >
                  <th
                    abbr="#"
                    scope="col"
                  >
                    #
                  </th>
                  <th
                    abbr="date"
                  >
                    Date
                  </th>
                  <th
                    abbr="ip"
                  >
                    IP
                  </th>
                  <th
                    abbr="description"
                  >
                    Description
                  </th>
                  <th
                    abbr="domain"
                  >
                    Domain
                  </th>
                  <th
                    abbr="asn"
                  >
                    ASN
                  </th>
                  <th
                    abbr="registrant"
                  >
                    Registrant
                  </th>
                  <th
                    abbr="revlookup"
                  >
                    Reverse Lookup
                  </th>
                  <th
                    abbr="country"
                  >
                    Country
                  </th>
                </tr>
              </thead>
              <tbody />
            </table>
          </div>,
          "className": "row",
          "id": "dataTable",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="table-responsive row-margin-top-10"
            >
              <table
                class="table table-hover"
              >
                <thead
                  class="thead-dark"
                >
                  <tr>
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <table
                className="table table-hover"
              >
                <thead
                  className="thead-dark"
                >
                  <tr
                    onClick={[Function]}
                  >
                    <th
                      abbr="#"
                      scope="col"
                    >
                      #
                    </th>
                    <th
                      abbr="date"
                    >
                      Date
                    </th>
                    <th
                      abbr="ip"
                    >
                      IP
                    </th>
                    <th
                      abbr="description"
                    >
                      Description
                    </th>
                    <th
                      abbr="domain"
                    >
                      Domain
                    </th>
                    <th
                      abbr="asn"
                    >
                      ASN
                    </th>
                    <th
                      abbr="registrant"
                    >
                      Registrant
                    </th>
                    <th
                      abbr="revlookup"
                    >
                      Reverse Lookup
                    </th>
                    <th
                      abbr="country"
                    >
                      Country
                    </th>
                  </tr>
                </thead>
                <tbody />
              </table>,
              "className": "table-responsive row-margin-top-10",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <table
                  class="table table-hover"
                >
                  <thead
                    class="thead-dark"
                  >
                    <tr>
                      <th
                        abbr="#"
                        scope="col"
                      >
                        #
                      </th>
                      <th
                        abbr="date"
                      >
                        Date
                      </th>
                      <th
                        abbr="ip"
                      >
                        IP
                      </th>
                      <th
                        abbr="description"
                      >
                        Description
                      </th>
                      <th
                        abbr="domain"
                      >
                        Domain
                      </th>
                      <th
                        abbr="asn"
                      >
                        ASN
                      </th>
                      <th
                        abbr="registrant"
                      >
                        Registrant
                      </th>
                      <th
                        abbr="revlookup"
                      >
                        Reverse Lookup
                      </th>
                      <th
                        abbr="country"
                      >
                        Country
                      </th>
                    </tr>
                  </thead>
                  <tbody />
                </table>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <thead
                      className="thead-dark"
                    >
                      <tr
                        onClick={[Function]}
                      >
                        <th
                          abbr="#"
                          scope="col"
                        >
                          #
                        </th>
                        <th
                          abbr="date"
                        >
                          Date
                        </th>
                        <th
                          abbr="ip"
                        >
                          IP
                        </th>
                        <th
                          abbr="description"
                        >
                          Description
                        </th>
                        <th
                          abbr="domain"
                        >
                          Domain
                        </th>
                        <th
                          abbr="asn"
                        >
                          ASN
                        </th>
                        <th
                          abbr="registrant"
                        >
                          Registrant
                        </th>
                        <th
                          abbr="revlookup"
                        >
                          Reverse Lookup
                        </th>
                        <th
                          abbr="country"
                        >
                          Country
                        </th>
                      </tr>
                    </thead>,
                    <tbody />,
                  ],
                  "className": "table table-hover",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <thead
                      class="thead-dark"
                    >
                      <tr>
                        <th
                          abbr="#"
                          scope="col"
                        >
                          #
                        </th>
                        <th
                          abbr="date"
                        >
                          Date
                        </th>
                        <th
                          abbr="ip"
                        >
                          IP
                        </th>
                        <th
                          abbr="description"
                        >
                          Description
                        </th>
                        <th
                          abbr="domain"
                        >
                          Domain
                        </th>
                        <th
                          abbr="asn"
                        >
                          ASN
                        </th>
                        <th
                          abbr="registrant"
                        >
                          Registrant
                        </th>
                        <th
                          abbr="revlookup"
                        >
                          Reverse Lookup
                        </th>
                        <th
                          abbr="country"
                        >
                          Country
                        </th>
                      </tr>
                    </thead>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <tr
                        onClick={[Function]}
                      >
                        <th
                          abbr="#"
                          scope="col"
                        >
                          #
                        </th>
                        <th
                          abbr="date"
                        >
                          Date
                        </th>
                        <th
                          abbr="ip"
                        >
                          IP
                        </th>
                        <th
                          abbr="description"
                        >
                          Description
                        </th>
                        <th
                          abbr="domain"
                        >
                          Domain
                        </th>
                        <th
                          abbr="asn"
                        >
                          ASN
                        </th>
                        <th
                          abbr="registrant"
                        >
                          Registrant
                        </th>
                        <th
                          abbr="revlookup"
                        >
                          Reverse Lookup
                        </th>
                        <th
                          abbr="country"
                        >
                          Country
                        </th>
                      </tr>,
                      "className": "thead-dark",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <tr>
                          <th
                            abbr="#"
                            scope="col"
                          >
                            #
                          </th>
                          <th
                            abbr="date"
                          >
                            Date
                          </th>
                          <th
                            abbr="ip"
                          >
                            IP
                          </th>
                          <th
                            abbr="description"
                          >
                            Description
                          </th>
                          <th
                            abbr="domain"
                          >
                            Domain
                          </th>
                          <th
                            abbr="asn"
                          >
                            ASN
                          </th>
                          <th
                            abbr="registrant"
                          >
                            Registrant
                          </th>
                          <th
                            abbr="revlookup"
                          >
                            Reverse Lookup
                          </th>
                          <th
                            abbr="country"
                          >
                            Country
                          </th>
                        </tr>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <th
                              abbr="#"
                              scope="col"
                            >
                              #
                            </th>,
                            <th
                              abbr="date"
                            >
                              Date
                            </th>,
                            <th
                              abbr="ip"
                            >
                              IP
                            </th>,
                            <th
                              abbr="description"
                            >
                              Description
                            </th>,
                            <th
                              abbr="domain"
                            >
                              Domain
                            </th>,
                            <th
                              abbr="asn"
                            >
                              ASN
                            </th>,
                            <th
                              abbr="registrant"
                            >
                              Registrant
                            </th>,
                            <th
                              abbr="revlookup"
                            >
                              Reverse Lookup
                            </th>,
                            <th
                              abbr="country"
                            >
                              Country
                            </th>,
                          ],
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <th
                              abbr="#"
                              scope="col"
                            >
                              #
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "abbr": "#",
                              "children": "#",
                              "scope": "col",
                            },
                            "ref": null,
                            "rendered": Array [
                              "#",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              abbr="date"
                            >
                              Date
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "abbr": "date",
                              "children": "Date",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Date",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              abbr="ip"
                            >
                              IP
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "abbr": "ip",
                              "children": "IP",
                            },
                            "ref": null,
                            "rendered": Array [
                              "IP",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              abbr="description"
                            >
                              Description
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "abbr": "description",
                              "children": "Description",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Description",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              abbr="domain"
                            >
                              Domain
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "abbr": "domain",
                              "children": "Domain",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Domain",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              abbr="asn"
                            >
                              ASN
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "abbr": "asn",
                              "children": "ASN",
                            },
                            "ref": null,
                            "rendered": Array [
                              "ASN",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              abbr="registrant"
                            >
                              Registrant
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "abbr": "registrant",
                              "children": "Registrant",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Registrant",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              abbr="revlookup"
                            >
                              Reverse Lookup
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "abbr": "revlookup",
                              "children": "Reverse Lookup",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Reverse Lookup",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              abbr="country"
                            >
                              Country
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "abbr": "country",
                              "children": "Country",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Country",
                            ],
                            "type": "th",
                          },
                        ],
                        "type": "tr",
                      },
                    ],
                    "type": "thead",
                  },
                  Object {
                    "instance": <tbody />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [],
                    },
                    "ref": null,
                    "rendered": Array [
                      Array [],
                    ],
                    "type": "tbody",
                  },
                ],
                "type": "table",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
